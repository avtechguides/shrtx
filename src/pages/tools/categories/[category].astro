---
import ToolsLayout from '@layouts/ToolsLayout.astro';
import ToolCard from '@components/ui/tools/ToolCard.astro';
import ToolsPagination from '@components/ui/nav/ToolsPagination.astro';
import { slugifyTag as slugify } from '@lib/slug'; // import at top

export const prerender = true;

interface ToolFrontmatter {
  slug: string;
  title: string;
  description?: string;
  category?: string;
  popularity?: number;
}

export async function getStaticPaths() {
  const modules = import.meta.glob<{ frontmatter: ToolFrontmatter }>(
    '../../../content/tools/**/*.mdx',
    { eager: true }
  );
  const toolModules = Object.values(modules);
  const unique = new Set<string>();
  for (const mod of toolModules) {
    const fm = mod.frontmatter;
    if (!fm?.category) continue;
    unique.add(slugify(fm.category)); // now defined
  }
  return Array.from(unique).map((category) => ({ params: { category } }));
}

const { category: catSlug } = Astro.params;

const modules = import.meta.glob<{ frontmatter: ToolFrontmatter }>(
  '../../../content/tools/**/*.mdx',
  { eager: true }
);
const toolModules = Object.values(modules);
const tools = toolModules.map((mod) => {
  const fm = mod.frontmatter;
  return {
    slug: fm.slug,
    title: fm.title,
    description: fm.description,
    category: fm.category,
    popularity: fm.popularity ?? 0,
    url: `/tools/${fm.slug}`,
  };
});

const categoryTools = tools.filter(
  (t) => t.category && slugify(t.category) === catSlug
);

if (categoryTools.length === 0) return Astro.redirect('/404');

const cleanCategory = categoryTools[0]?.category?.trim() ?? catSlug.replace(/-/g, ' ');
const pageTitle = cleanCategory.endsWith('Tools') ? `${cleanCategory} - SHRTX` : `${cleanCategory} Tools - SHRTX`;
const pageDescription = `Explore all tools under the ${cleanCategory} category.`;

const currentPage = 1;
const perPage = 12;
const totalPages = Math.ceil(categoryTools.length / perPage);
const paginatedTools = categoryTools.slice((currentPage - 1) * perPage, currentPage * perPage);
---

<ToolsLayout title={pageTitle} description={pageDescription} category={cleanCategory} showHeader={true} tools={tools}>
  {paginatedTools.length > 0 ? (
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {paginatedTools.map((tool) => <ToolCard {...tool} />)}
    </div>
  ) : (
    <div class="py-8 text-center text-lg text-[var(--color-text-muted)]">No tools found in this category yet.</div>
  )}

  {totalPages > 1 && (
    <ToolsPagination currentPage={currentPage} totalPages={totalPages} basePath={`/tools/categories/${catSlug}`} />
  )}
</ToolsLayout>
