---
import ToolsLayout from '@layouts/ToolsLayout.astro';
import ToolCard from '@components/ui/tools/ToolCard.astro';
import ToolFeatures from '@components/ui/tools/ToolFeatures.astro';

export const prerender = true;

interface ToolFrontmatter {
  slug: string;
  title: string;
  description?: string;
  category?: string;
  features?: string[];
  popularity?: number;
}

interface ToolModule {
  frontmatter: ToolFrontmatter;
  default: any; // MDX component
}

const slugifyTag = (str: string): string => str.toLowerCase().replace(/\s+/g, '-');
const formatCategory = (s: string): string => s.replace(/-/g, ' ').replace(/\b\w/g, (c: string) => c.toUpperCase());

// Use import.meta.glob with eager: true to import all MDX modules eagerly
const modules = import.meta.glob<ToolModule>('../../content/tools/**/*.mdx', { eager: true });
const toolModules: ToolModule[] = Object.values(modules);

const paths = toolModules.map((mod) => ({
  params: { slug: mod.frontmatter.slug }
}));

export function getStaticPaths(): { params: { slug: string } }[] {
  return paths;
}

const { slug } = Astro.params;
const toolModule = toolModules.find((mod) => mod.frontmatter.slug === slug);

if (!toolModule) {
  return Astro.redirect('/404');
}

const tool = toolModule.frontmatter;

const pageTitle = `${tool.title} - SHRTX Tools`;
const pageDescription = tool.description ?? '';
const path = `/tools/${tool.slug}`;

const sortedFrontmatters = toolModules
  .map((mod) => mod.frontmatter)
  .filter((t) => !!t.slug)
  .sort((a, b) => a.title.localeCompare(b.title));

const idx = sortedFrontmatters.findIndex((t) => t.slug === slug);
const prevTool = idx > 0 ? sortedFrontmatters[idx - 1] : null;
const nextTool = idx < sortedFrontmatters.length - 1 ? sortedFrontmatters[idx + 1] : null;

const categoryName = tool.category ?? '';
const categorySlug = categoryName ? slugifyTag(categoryName) : '';
const categoryHref = categorySlug ? `/tools/categories/${categorySlug}` : '';
---

<ToolsLayout title={pageTitle} description={pageDescription} path={path} category={categoryName} showHeader={true}>

  {categoryHref && (
    <p class="text-sm text-[var(--color-text-muted)] mb-4">
      <a href="/tools" class="hover:underline">Tools</a>
      {categoryName && <> â€¢ <a href={categoryHref} class="hover:underline">{formatCategory(categoryName)}</a></>}
    </p>
  )}

  <ToolCard {...tool} />

  {tool.features && tool.features.length > 0 && <ToolFeatures features={tool.features} />}

  <toolModule.default />
</ToolsLayout>
