---
import { getCollection } from 'astro:content';
import Seo from '@/components/Seo.astro';
import Header from '@/components/sections/Header.astro';
import Footer from '@/components/sections/Footer.astro';
import BlogHero from '@/components/sections/BlogHero.astro';
import BlogAllArticles from '@/components/sections/BlogAllArticles.astro';
import BlogPagination from '@/components/ui/nav/BlogPagination.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '@/config';
import { generateCollectionSEO } from '@/config';

// Data + pagination
export async function getStaticPaths() {
  const PAGE_SIZE = 6;
  const posts = (await getCollection('blog')).sort(
    (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
  );
  const totalPages = Math.max(1, Math.ceil(posts.length / PAGE_SIZE));
  return Array.from({ length: totalPages - 1 }, (_, i) => ({
    params: { page: String(i + 2) }
  }));
}

const PAGE_SIZE = 6;
const posts = (await getCollection('blog')).sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

const { page } = Astro.params;
const currentPage = Math.max(1, parseInt(page || '1', 10));
const start = (currentPage - 1) * PAGE_SIZE;
const end = start + PAGE_SIZE;
const pagePosts = posts.slice(start, end);
const totalPages = Math.max(1, Math.ceil(posts.length / PAGE_SIZE));

// Canonical for this page
const basePath = '/blog/';
const canonical = currentPage === 1 ? basePath : `${basePath}page/${currentPage}/`;

// Collect categories and tags for JSON-LD context
const categories = Array.from(new Set(pagePosts.map((p) => p.data.category).filter(Boolean)));
const tags = Array.from(new Set(pagePosts.flatMap((p) => p.data.tags || [])));

// SEO: collection page metadata + JSON-LD
const collectionSeo = generateCollectionSEO({
  title: `Blog — Page ${currentPage}`,
  description: SITE_DESCRIPTION,
  path: canonical,
  currentPage,
  totalPages
});
---

<!doctype html>
<html lang="en">
  <head>
    <Seo
      title={`${SITE_TITLE} | Blog — Page ${currentPage}`}
      description={SITE_DESCRIPTION}
      path={canonical}
      type="page"
    />

    <!-- Prev/Next pagination hints -->
    {currentPage > 1 && (
      <link rel="prev" href={currentPage === 2 ? basePath : `${basePath}page/${currentPage - 1}/`} />
    )}
    {currentPage < totalPages && (
      <link rel="next" href={`${basePath}page/${currentPage + 1}/`} />
    )}

    <!-- Collection JSON-LD (with categories/tags enrichment) -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify({
        ...collectionSeo.jsonLd,
        about: categories,
        keywords: tags
      })}
    />
  </head>
  <body class="bg-[var(--background)] text-[var(--foreground)] transition-colors duration-300">
    <Header />
    <BlogHero title="Blog" subtitle="Stories, notes, and learnings." />
    <main class="mx-auto max-w-6xl px-4 py-8 space-y-10">
      <BlogAllArticles posts={pagePosts} />
      <BlogPagination currentPage={currentPage} totalPages={totalPages} />
    </main>
    <Footer />
  </body>
</html>
