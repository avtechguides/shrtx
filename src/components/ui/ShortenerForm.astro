---
interface Props {
  onShorten?: (url: string) => void; // optional callback for shortening
  onGenerateQr?: (url: string) => void; // optional callback for QR generation
}

const { onShorten, onGenerateQr } = Astro.props as Props;
let inputUrl: string = '';
---

<section class="w-full max-w-xl mx-auto p-6 bg-white dark:bg-[color:var(--card)] rounded-2xl shadow-xl">
  <h2 class="text-2xl font-bold text-foreground mb-2">Get Started</h2>
  <p class="text-sm text-[color:var(--color-text-muted)] mb-4">
    Shorten links or generate QR codes instantly. No signup required.
  </p>
  <form
    class="flex flex-col sm:flex-row gap-3"
    onsubmit="handleSubmit(event)"
  >
  <script type="module" is:inline>
    function handleSubmit(e) {
      e.preventDefault();
      if (typeof onShorten === 'function') onShorten(inputUrl);
    }
  </script>
    <input
      type="url"
      placeholder="https://example.com/your-long-url"
      class="flex-1 px-4 py-3 rounded-xl border border-[color:var(--border)] text-sm focus:outline-none focus:ring-2 focus:ring-[var(--accent)] dark:bg-[color:var(--input)] dark:text-foreground"
      value={inputUrl}
      :onInput={(e: Event) => {
        const target = e.target as HTMLInputElement;
        inputUrl = target.value;
      }}
      required
    />
    <button
      type="submit"
      class="px-6 py-3 bg-[var(--accent)] text-white font-semibold rounded-xl hover:bg-[var(--accent-dark)] transition"
    >
      Shorten Link →
    </button>
    <button
      id="generate-qr-btn"
      type="button"
      class="px-6 py-3 bg-[var(--secondary)] text-foreground font-semibold rounded-xl hover:bg-[var(--secondary-foreground)] transition"
    >
      Generate QR →
    </button>
    <script type="module" is:inline>
      document.getElementById('generate-qr-btn')?.addEventListener('click', () => {
        if (typeof onGenerateQr === 'function') onGenerateQr(inputUrl);
      });
    </script>
  </form>
</section>
