---
export interface Props {
  results: {
    title: string;
    description?: string;
    icon?: string;
    category?: string;
    isPremium?: boolean;
    popularity?: number;
    slug?: string;
  }[];
}

const { results = [] } = Astro.props as Props;
---

<div class="results grid grid-cols-1 gap-3">
  {results.length === 0 ? (
    <p class="text-[var(--color-text-muted)]">No results found.</p>
  ) : (
    results.map((tool) => {
      const {
        title,
        description = '',
        icon = '',
        slug,
      } = tool;
      const link = slug ? `/tools/${slug}` : '#';

      return (
        <a href={link} class="card block border rounded-md p-3 hover:border-[var(--accent,#4f46e5)] transition-colors">
          <div class="flex items-start gap-2">
            {icon && (<img src={icon} alt="" width="16" height="16" class="mt-0.5" />)}
            <div class="min-w-0">
              <div class="title font-medium text-sm truncate">{title}</div>
              {description && (
                <div class="desc text-xs text-[var(--color-text-muted)] mt-1 line-clamp-2">
                  {description}
                </div>
              )}
            </div>
          </div>
        </a>
      );
    })
  )}
</div>

<style>
.results { margin-top: 0.25rem; }
.card { background: var(--card, var(--color-bg-secondary)); }
.title { color: var(--foreground, var(--color-text-primary)); }
.desc { color: var(--muted-foreground, var(--color-text-muted)); }
</style>
