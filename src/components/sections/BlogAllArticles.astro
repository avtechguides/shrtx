---
import type { CollectionEntry } from 'astro:content';
import PostCard from '../ui/card/PostCard.astro';

interface Props {
  posts: CollectionEntry<'blog'>[];
  title?: string;
  description?: string;
}

const {
  posts = [],
  title = 'All Articles',
  description,
} = Astro.props as Props;
---

<section
  class="space-y-4 sm:space-y-6 bg-[var(--background)] text-[var(--foreground)] transition-colors duration-300"
  aria-labelledby="blog-all-title"
  role="region"
  aria-label="All articles"
>
  <header class="flex flex-col gap-2">
    <h2
      id="blog-all-title"
      class="text-2xl sm:text-3xl font-extrabold tracking-tight"
    >
      {title}
    </h2>
    {description && (
      <p class="text-sm sm:text-base text-[var(--muted-foreground,#6b7280)] max-w-prose">
        {description}
      </p>
    )}
  </header>

  {posts.length > 0 ? (
    <div class="blog-grid" role="list">
      {posts.map((post) => (
        <div role="listitem" tabindex="0" class="focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded-md">
          <PostCard post={post} />
        </div>
      ))}
    </div>
  ) : (
    <div class="rounded-lg border border-[var(--border)] bg-[var(--card)] text-[var(--card-foreground)] p-6 text-center">
      No articles found.
    </div>
  )}
</section>

<style>
.blog-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}
@media (min-width: 768px) {
  .blog-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 1.25rem;
  }
}
@media (min-width: 1024px) {
  .blog-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1.5rem;
  }
}
</style>
