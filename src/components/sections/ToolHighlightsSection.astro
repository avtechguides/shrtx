---
import type { ToolHighlight } from '@/data/toolHighlights';

interface Props {
  title?: string;
  highlights?: ToolHighlight[];
  ariaLabel?: string;
  compact?: boolean;
}

const {
  title = 'Why Use SHRTX for URL Shortening?',
  highlights = [
    { title: 'Easy & Fast', description: 'Enter a long URL and get a shortened link instantly.', icon: 'âš¡' },
    { title: 'Shortened Links Everywhere', description: 'Optimized links for sharing across platforms.', icon: 'ðŸ“ˆ' },
    { title: 'Secure & Reliable', description: 'HTTPS and automated abuse filtering for safe links.', icon: 'ðŸ”’' },
    { title: 'Analytics & Tracking', description: 'Monitor clicks and engagement in real time.', icon: 'ðŸ“Š' },
    { title: 'QR Code Generator', description: 'Create QR codes instantly for any link.', icon: 'âœ¨' },
    { title: 'Device Compatible', description: 'Works across phones, tablets, and desktops.', icon: 'ðŸ“±' }
  ],
  ariaLabel = 'Tool highlights',
  compact = false
} = Astro.props as Props;

const items: ToolHighlight[] = Array.isArray(highlights) ? [...highlights] : [];
---

<section
  class="w-full py-12 bg-[var(--background)] text-[var(--foreground)] transition-colors duration-300"
  aria-labelledby="tool-highlights-title"
  role="region"
  aria-label={ariaLabel}
>
  <div class="mx-auto max-w-6xl px-4 text-center mb-10">
    <h2 id="tool-highlights-title" class="text-3xl md:text-4xl font-extrabold mb-2">
      <span class="bg-gradient-to-r from-[var(--accent)] to-[var(--accent-dark)] bg-clip-text text-transparent">
        {title}
      </span>
    </h2>
  </div>

  <div
    class={[
      'mx-auto max-w-6xl px-4 grid gap-6',
      compact ? 'grid-cols-1 md:grid-cols-3' : 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3'
    ].join(' ')}
    role="list"
    aria-roledescription="cards"
  >
    {items.length === 0 ? (
      <div class="col-span-full text-center text-[var(--muted-foreground,#6b7280)]">
        No highlights available right now.
      </div>
    ) : (
      items.map((h) => (
        <article
          class={[
            'relative group rounded-2xl bg-[var(--card)] text-[var(--card-foreground)] ring-1 ring-inset ring-[var(--border)] shadow-md hover:shadow-lg transition-transform duration-200 hover:-translate-y-0.5 focus-within:-translate-y-0.5',
            'focus-within:outline-none focus-within:ring-2 focus-within:ring-[var(--accent)]',
            compact ? 'p-5' : 'p-6 md:p-6'
          ].join(' ')}
          role="listitem"
          aria-label={h.title}
          tabindex="0"
        >
          <!-- Decorative gradient frame (ignores pointer events) -->
          <span aria-hidden="true" class="frame">
            <span class="frame-inner"></span>
          </span>

          <div class="relative flex flex-col items-center text-center">
            <div class={['flex items-center justify-center text-4xl transition-transform duration-300 group-hover:scale-110', compact ? 'mb-3 w-14 h-14' : 'mb-4 w-16 h-16'].join(' ')}>
              <span aria-hidden="true">{h.icon}</span>
            </div>
            <h3 class={['font-extrabold mb-2', compact ? 'text-lg' : 'text-xl'].join(' ')}>
              <span class="bg-gradient-to-r from-[var(--accent)] to-[var(--accent-dark)] bg-clip-text text-transparent">
                {h.title}
              </span>
            </h3>
            <p class={['text-[var(--muted-foreground,#6b7280)] leading-relaxed', compact ? 'text-sm' : ''].join(' ')}>
              {h.description}
            </p>
          </div>
        </article>
      ))
    )}
  </div>
</section>

<style>
.frame {
  pointer-events: none;
  position: absolute;
  inset: 0;
  border-radius: 16px;
  padding: 2px;
  opacity: .15;
  transition: opacity .3s ease;
}
.group:hover .frame { opacity: .35; }

.frame-inner {
  position: absolute;
  inset: 0;
  border-radius: 16px;
  background: linear-gradient(90deg, var(--accent), var(--accent-dark));
  /* punched out center */
  mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}
</style>
