---
import ToolCard from '@components/ui/tools/ToolCard.astro';
import type { tools as toolsData } from '@data/tools/tools';

type Tool = typeof toolsData[number];

interface Props {
  tools: Tool[];
  title?: string;
  description?: string;
  showHeader?: boolean;
}

const {
  tools = [],
  title = 'All Tools',
  description,
  showHeader = true,
} = Astro.props as Props;
---

<section
  class="space-y-4 sm:space-y-6 bg-[var(--background)] text-[var(--foreground)] transition-colors duration-300"
  aria-labelledby="tools-all-title"
  role="region"
  aria-label="All tools"
>
  {showHeader && (
    <header class="flex flex-col gap-2">
      <h2
        id="tools-all-title"
        class="text-2xl sm:text-3xl font-extrabold tracking-tight"
      >
        {title}
      </h2>
      {description && (
        <p class="text-sm sm:text-base text-[var(--muted-foreground,#6b7280)] max-w-prose">
          {description}
        </p>
      )}
    </header>
  )}

  {tools.length > 0 ? (
    <div class="tools-grid" role="list" aria-roledescription="cards">
      {tools.map((tool) => {
        const href = tool.href ?? (tool.slug ? `/tools/${tool.slug}` : undefined);
        return (
          <article
            role="listitem"
            tabindex="0"
            aria-label={tool.title}
            class="relative group focus:outline-none focus:ring-2 focus:ring-[var(--accent)] rounded-2xl"
          >
            <!-- Gradient frame and surface wrapper for consistency with home cards -->
            <span
              aria-hidden="true"
              class="pointer-events-none absolute inset-0 rounded-2xl p-[2px] opacity-15 transition-opacity duration-300 group-hover:opacity-35"
            >
              <span
                class="absolute inset-0 rounded-2xl"
                style="background: linear-gradient(90deg, var(--accent), var(--accent-dark));
                       mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
                       -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
                       -webkit-mask-composite: xor; mask-composite: exclude; padding: 2px;"
              ></span>
            </span>

            <div class="relative rounded-2xl bg-[var(--card)] text-[var(--card-foreground)] ring-1 ring-inset ring-[var(--border)] shadow-md hover:shadow-lg transition-transform duration-200 hover:-translate-y-0.5">
              <ToolCard
                title={tool.title}
                description={tool.description}
                icon={tool.icon}
                href={href}
                isPremium={tool.isPremium}
                popularity={tool.popularity}
              />
            </div>
          </article>
        );
      })}
    </div>
  ) : (
    <div class="rounded-lg border border-[var(--border)] bg-[var(--card)] text-[var(--card-foreground)] p-6 text-center">
      No tools found.
    </div>
  )}
</section>

<style>
.tools-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}
@media (min-width: 768px) {
  .tools-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 1.25rem;
  }
}
@media (min-width: 1024px) {
  .tools-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1.5rem;
  }
}
</style>
